// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String 
  password String
  email String @unique
  isAdmin Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order []
  sales Sale []
  @@index([email])
}

model Product {
  id String @id @default(uuid())
  name String
  desc String?
  isStock Boolean?
  left Int?
  images ProductImg []
  orders Order []
  sales Sale []
  categories Category []
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(uuid())
  name String 
  products Product []
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductImg {
  id Int @id @default(autoincrement())
  imgUrl String
  product Product @relation(fields: [productId],references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(uuid())
  orderName String
  orderDesc String?
  status Status @default(ONGOING)
  user User @relation(fields: [userId],references: [id])
  userId String
  productId String
  product Product @relation(fields: [productId],references: [id])
  sale Sale?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sale {
  id String @id @default(uuid())
  saleDesc String?
  status Status @default(SOLD)
  user User @relation(fields: [userId],references: [id])
  userId String
  product Product @relation(fields: [productId],references: [id])
  productId String
  order Order @relation(fields: [orderId],references: [id])
  orderId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  SOLD
  ONGOING
  CANCELED
}